{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { projectStorage } from './firebase';\n\nconst useStorage = file => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    // references\n    const storageRef = projectStorage.ref(file.name);\n    storageRef.put(file).on('state_changed', snap => {\n      const percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\n_s(useStorage, \"xn2AiAzche7NzWswJ7VS1PhvjkU=\");\n\nexport default useStorage;","map":{"version":3,"sources":["/home/achyuth/Documents/frontendgeekcart/src/config/useStorage.js"],"names":["useState","useEffect","projectStorage","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,UAAU,GAAGC,IAAI,IAAI;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMU,UAAU,GAAGT,cAAc,CAACU,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB;AACAF,IAAAA,UAAU,CAACG,GAAX,CAAeV,IAAf,EAAqBW,EAArB,CACE,eADF,EAEEC,IAAI,IAAI;AACN,YAAMC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA/D;AACAb,MAAAA,WAAW,CAACW,UAAD,CAAX;AACD,KALH,EAMEG,GAAG,IAAI;AACLZ,MAAAA,QAAQ,CAACY,GAAD,CAAR;AACD,KARH,EASE,YAAY;AACV,YAAMX,GAAG,GAAG,MAAME,UAAU,CAACU,cAAX,EAAlB;AACAX,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KAZH;AAcD,GAjBQ,EAiBN,CAACL,IAAD,CAjBM,CAAT;AAkBA,SAAO;AAAEC,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AACD,CAxBD;;GAAMJ,U;;AA0BN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { projectStorage } from './firebase'\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0)\n  const [error, setError] = useState(null)\n  const [url, setUrl] = useState(null)\n\n  useEffect(() => {\n    // references\n    const storageRef = projectStorage.ref(file.name)\n    storageRef.put(file).on(\n      'state_changed',\n      snap => {\n        const percentage = (snap.bytesTransferred / snap.totalBytes) * 100\n        setProgress(percentage)\n      },\n      err => {\n        setError(err)\n      },\n      async () => {\n        const url = await storageRef.getDownloadURL()\n        setUrl(url)\n      }\n    )\n  }, [file])\n  return { progress, url, error }\n}\n\nexport default useStorage\n"]},"metadata":{},"sourceType":"module"}