{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDeleteReducer, productDetailReducer, productListReducer } from './reducers/productReducer';\nimport { userListReducer, userLoginReducer, userProfileReducer, userRegisterReducer, userUpdateProfileReducer } from './reducers/userReducer'; // const reducer = {}\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userProfile: userProfileReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer\n});\n/* eslint-disable */\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n/* eslint-enable */\n\nconsole.log('userInfoFromStorage', userInfoFromStorage);\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middlewares = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlewares)));\nexport default store;","map":{"version":3,"sources":["/home/achyuth/Documents/geekcart/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDeleteReducer","productDetailReducer","productListReducer","userListReducer","userLoginReducer","userProfileReducer","userRegisterReducer","userUpdateProfileReducer","reducer","productList","productDetails","productDelete","productCreate","productCreateReducer","userLogin","userRegister","userProfile","userUpdateProfile","userList","userInfoFromStorage","localStorage","getItem","JSON","parse","console","log","initialState","userInfo","middlewares","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,kBAHF,QAIO,2BAJP;AAKA,SACEC,eADF,EAEEC,gBAFF,EAGEC,kBAHF,EAIEC,mBAJF,EAKEC,wBALF,QAMO,wBANP,C,CAQA;;AACA,MAAMC,OAAO,GAAGZ,eAAe,CAAC;AAC9Ba,EAAAA,WAAW,EAAEP,kBADiB;AAE9BQ,EAAAA,cAAc,EAAET,oBAFc;AAG9BU,EAAAA,aAAa,EAAEX,oBAHe;AAI9BY,EAAAA,aAAa,EAAEC,oBAJe;AAM9BC,EAAAA,SAAS,EAAEV,gBANmB;AAO9BW,EAAAA,YAAY,EAAET,mBAPgB;AAQ9BU,EAAAA,WAAW,EAAEX,kBARiB;AAS9BY,EAAAA,iBAAiB,EAAEV,wBATW;AAU9BW,EAAAA,QAAQ,EAAEf;AAVoB,CAAD,CAA/B;AAYA;;AACA,MAAMgB,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAGA;;AACAG,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCN,mBAAnC;AACA,MAAMO,YAAY,GAAG;AACnBZ,EAAAA,SAAS,EAAE;AACTa,IAAAA,QAAQ,EAAER;AADD;AADQ,CAArB;AAMA,MAAMS,WAAW,GAAG,CAAC9B,KAAD,CAApB;AAEA,MAAM+B,KAAK,GAAGlC,WAAW,CACvBa,OADuB,EAEvBkB,YAFuB,EAGvB3B,mBAAmB,CAACF,eAAe,CAAC,GAAG+B,WAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productDeleteReducer,\n  productDetailReducer,\n  productListReducer\n} from './reducers/productReducer'\nimport {\n  userListReducer,\n  userLoginReducer,\n  userProfileReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer\n} from './reducers/userReducer'\n\n// const reducer = {}\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userProfile: userProfileReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer\n})\n/* eslint-disable */\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n/* eslint-enable */\nconsole.log('userInfoFromStorage', userInfoFromStorage)\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n}\n\nconst middlewares = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewares))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}