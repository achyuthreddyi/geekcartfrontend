{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createReviewReducer, productCreateReducer, productDeleteReducer, productDetailReducer, productListReducer, productTopRatedReducer, productUpdateReducer } from './reducers/productReducer';\nimport { userListReducer, userLoginReducer, userProfileReducer, userRegisterReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducer';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderPayReducer, myOrderReducer, orderListReducer } from './reducers/orderReducers'; // const reducer = {}\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: createReviewReducer,\n  productTopRated: productTopRatedReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userProfile: userProfileReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userUpdate: userUpdateReducer,\n  cart: cartReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderList: orderListReducer,\n  myOrdersList: myOrderReducer\n});\n/* eslint-disable */\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\n/* eslint-enable */\n\nconsole.log('userInfoFromStorage', userInfoFromStorage);\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middlewares = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlewares)));\nexport default store;","map":{"version":3,"sources":["/home/achyuth/Documents/geekcart/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","createReviewReducer","productCreateReducer","productDeleteReducer","productDetailReducer","productListReducer","productTopRatedReducer","productUpdateReducer","userListReducer","userLoginReducer","userProfileReducer","userRegisterReducer","userUpdateProfileReducer","userUpdateReducer","cartReducer","orderCreateReducer","orderDeliverReducer","orderDetailsReducer","orderPayReducer","myOrderReducer","orderListReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","userLogin","userRegister","userProfile","userUpdateProfile","userList","userUpdate","cart","orderCreate","orderDetails","orderPay","orderDeliver","orderList","myOrdersList","userInfoFromStorage","localStorage","getItem","JSON","parse","cartItemsFromStorage","shippingAddressFromStorage","console","log","initialState","cartItems","userInfo","middlewares","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,mBADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,kBALF,EAMEC,sBANF,EAOEC,oBAPF,QAQO,2BARP;AASA,SACEC,eADF,EAEEC,gBAFF,EAGEC,kBAHF,EAIEC,mBAJF,EAKEC,wBALF,EAMEC,iBANF,QAOO,wBAPP;AAQA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,eAJF,EAKEC,cALF,EAMEC,gBANF,QAOO,0BAPP,C,CASA;;AACA,MAAMC,OAAO,GAAGxB,eAAe,CAAC;AAC9ByB,EAAAA,WAAW,EAAEjB,kBADiB;AAE9BkB,EAAAA,cAAc,EAAEnB,oBAFc;AAG9BoB,EAAAA,aAAa,EAAErB,oBAHe;AAI9BsB,EAAAA,aAAa,EAAEvB,oBAJe;AAK9BwB,EAAAA,aAAa,EAAEnB,oBALe;AAM9BoB,EAAAA,mBAAmB,EAAE1B,mBANS;AAO9B2B,EAAAA,eAAe,EAAEtB,sBAPa;AAS9BuB,EAAAA,SAAS,EAAEpB,gBATmB;AAU9BqB,EAAAA,YAAY,EAAEnB,mBAVgB;AAW9BoB,EAAAA,WAAW,EAAErB,kBAXiB;AAY9BsB,EAAAA,iBAAiB,EAAEpB,wBAZW;AAa9BqB,EAAAA,QAAQ,EAAEzB,eAboB;AAc9B0B,EAAAA,UAAU,EAAErB,iBAdkB;AAgB9BsB,EAAAA,IAAI,EAAErB,WAhBwB;AAkB9BsB,EAAAA,WAAW,EAAErB,kBAlBiB;AAmB9BsB,EAAAA,YAAY,EAAEpB,mBAnBgB;AAoB9BqB,EAAAA,QAAQ,EAAEpB,eApBoB;AAqB9BqB,EAAAA,YAAY,EAAEvB,mBArBgB;AAsB9BwB,EAAAA,SAAS,EAAEpB,gBAtBmB;AAwB9BqB,EAAAA,YAAY,EAAEtB;AAxBgB,CAAD,CAA/B;AA0BA;;AACA,MAAMuB,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,oBAAoB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAGA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA;;AACAK,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCR,mBAAnC;AACA,MAAMS,YAAY,GAAG;AACnBhB,EAAAA,IAAI,EAAE;AACJiB,IAAAA,SAAS,EAAEL;AADP,GADa;AAInBlB,EAAAA,SAAS,EAAE;AACTwB,IAAAA,QAAQ,EAAEX;AADD;AAJQ,CAArB;AASA,MAAMY,WAAW,GAAG,CAACvD,KAAD,CAApB;AAEA,MAAMwD,KAAK,GAAG3D,WAAW,CACvByB,OADuB,EAEvB8B,YAFuB,EAGvBnD,mBAAmB,CAACF,eAAe,CAAC,GAAGwD,WAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  createReviewReducer,\n  productCreateReducer,\n  productDeleteReducer,\n  productDetailReducer,\n  productListReducer,\n  productTopRatedReducer,\n  productUpdateReducer\n} from './reducers/productReducer'\nimport {\n  userListReducer,\n  userLoginReducer,\n  userProfileReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer,\n  userUpdateReducer\n} from './reducers/userReducer'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  orderCreateReducer,\n  orderDeliverReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  myOrderReducer,\n  orderListReducer\n} from './reducers/orderReducers'\n\n// const reducer = {}\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: createReviewReducer,\n  productTopRated: productTopRatedReducer,\n\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userProfile: userProfileReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userUpdate: userUpdateReducer,\n\n  cart: cartReducer,\n\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderList: orderListReducer,\n\n  myOrdersList: myOrderReducer\n})\n/* eslint-disable */\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\n/* eslint-enable */\nconsole.log('userInfoFromStorage', userInfoFromStorage)\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n}\n\nconst middlewares = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewares))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}