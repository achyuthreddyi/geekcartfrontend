{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_PROFILE_REQUEST, USER_PROFILE_SUCCESS, USER_PROFILE_FAIL, USER_PROFILE_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL } from '../constants/userConstants';\nimport { MY_ORDER_DETAILS_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async (dispatch, getState) => {\n  console.log('in the dispatch of the user actions', dispatch);\n\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5000/api/user/signin', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    /* eslint-disable */\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    /* eslint-enable */\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.error ? error.response.data.error : error.error\n    });\n  }\n}; // register a new user\n\nexport const register = (name, email, password) => async (dispatch, getState) => {\n  console.log('in the dispatch of the user actions', name);\n\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5000/api/user/signup', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    /* eslint-disable */\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    /* eslint-enable */\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.error ? error.response.data.error : error.error\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  console.log('in the logout of the user Action file of the a', dispatch);\n  /* eslint-disable */\n\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('shippingAddress');\n  /* eslint-enable */\n\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_REGISTER_LOGOUT\n  });\n  dispatch({\n    type: USER_PROFILE_RESET\n  });\n  dispatch({\n    type: MY_ORDER_DETAILS_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n};\nexport const getuserProfile = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log('hey man innova crysta');\n    const {\n      data\n    } = await axios.get(`http://localhost:5000/api/user/5fd64cebff060237318f1e16`, config);\n    console.log('data from the get user profile', data);\n    dispatch({\n      type: USER_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_PROFILE_FAIL,\n      payload: error.response && error.response.data.error ? error.response.data.error : error.error\n    });\n  }\n}; // update the user profile\n\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    console.log('user in the update user profiel method', user);\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('http://localhost:5000/api/user/profile', user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.error ? error.response.data.error : error.error\n    });\n  }\n}; // get the user list for the admins\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('http://localhost:5000/api/user/admin/userlist', config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.error ? error.response.data.error : error.error\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:5000/api/user/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.error ? error.response.data.error : error.error\n    });\n  }\n}; // delete a user based on the id of the user by the admin\n\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`http://localhost:5000/api/user/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.error ? error.response.data.error : error.error\n    });\n  }\n};","map":{"version":3,"sources":["/home/achyuth/Documents/geekcart/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_PROFILE_REQUEST","USER_PROFILE_SUCCESS","USER_PROFILE_FAIL","USER_PROFILE_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","MY_ORDER_DETAILS_RESET","login","email","password","dispatch","getState","console","log","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","register","name","logout","removeItem","getuserProfile","id","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","authorization","put","listUsers","updateUser","_id","deleteUser","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_PROFILE_REQUEST,\n  USER_PROFILE_SUCCESS,\n  USER_PROFILE_FAIL,\n  USER_PROFILE_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL\n} from '../constants/userConstants'\n\nimport { MY_ORDER_DETAILS_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch, getState) => {\n  console.log('in the dispatch of the user actions', dispatch)\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    const { data } = await axios.post(\n      'http://localhost:5000/api/user/signin',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n    /* eslint-disable */\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n    /* eslint-enable */\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.error\n          ? error.response.data.error\n          : error.error\n    })\n  }\n}\n\n// register a new user\nexport const register = (name, email, password) => async (\n  dispatch,\n  getState\n) => {\n  console.log('in the dispatch of the user actions', name)\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    const { data } = await axios.post(\n      'http://localhost:5000/api/user/signup',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n    /* eslint-disable */\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n    /* eslint-enable */\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.error\n          ? error.response.data.error\n          : error.error\n    })\n  }\n}\n\nexport const logout = () => async dispatch => {\n  console.log('in the logout of the user Action file of the a', dispatch)\n  /* eslint-disable */\n  localStorage.removeItem('userInfo')\n  localStorage.removeItem('shippingAddress')\n  /* eslint-enable */\n\n  dispatch({\n    type: USER_LOGOUT\n  })\n  dispatch({\n    type: USER_REGISTER_LOGOUT\n  })\n  dispatch({\n    type: USER_PROFILE_RESET\n  })\n  dispatch({\n    type: MY_ORDER_DETAILS_RESET\n  })\n  dispatch({\n    type: USER_LIST_RESET\n  })\n}\n\nexport const getuserProfile = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_PROFILE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    console.log('hey man innova crysta')\n    const { data } = await axios.get(\n      `http://localhost:5000/api/user/5fd64cebff060237318f1e16`,\n      config\n    )\n    console.log('data from the get user profile', data)\n\n    dispatch({\n      type: USER_PROFILE_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.error\n          ? error.response.data.error\n          : error.error\n    })\n  }\n}\n\n// update the user profile\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    console.log('user in the update user profiel method', user)\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.put(\n      'http://localhost:5000/api/user/profile',\n      user,\n      config\n    )\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n\n    dispatch({\n      type: USER_PROFILE_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.error\n          ? error.response.data.error\n          : error.error\n    })\n  }\n}\n\n// get the user list for the admins\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.get(\n      'http://localhost:5000/api/user/admin/userlist',\n      config\n    )\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.error\n          ? error.response.data.error\n          : error.error\n    })\n  }\n}\n\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.put(\n      `http://localhost:5000/api/user/${user._id}`,\n      user,\n      config\n    )\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    })\n\n    dispatch({\n      type: USER_PROFILE_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.error\n          ? error.response.data.error\n          : error.error\n    })\n  }\n}\n\n// delete a user based on the id of the user by the admin\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    await axios.delete(`http://localhost:5000/api/user/${id}`, config)\n\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.error\n          ? error.response.data.error\n          : error.error\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}