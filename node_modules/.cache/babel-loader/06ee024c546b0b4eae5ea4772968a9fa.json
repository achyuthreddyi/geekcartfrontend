{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS } from '../constants/userConstants';\nexport const login = (email, password) => async (dispatch, getState) => {\n  console.log('in the dispatch of the user actions', dispatch);\n\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5000/api/user/signin', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    /* eslint-disable */\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // register a new user\n\nexport const register = (name, email, password) => async (dispatch, getState) => {\n  console.log('in the dispatch of the user actions', dispatch);\n\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5000/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  console.log(`in the logout of the user Action file of the a`, dispatch);\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_REGISTER_LOGOUT\n  }); // dispatch({\n  //   type: USER_PROFILE_RESET\n  // })\n  // dispatch({\n  //   type: MY_ORDER_DETAILS_RESET\n  // })\n  // dispatch({\n  //   type: USER_LIST_RESET\n  // })\n};","map":{"version":3,"sources":["/home/achyuth/Documents/geekcart/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","login","email","password","dispatch","getState","console","log","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","register","name","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","logout","removeItem","USER_LOGOUT","USER_REGISTER_LOGOUT"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS\n} from '../constants/userConstants'\n\nexport const login = (email, password) => async (dispatch, getState) => {\n  console.log('in the dispatch of the user actions', dispatch)\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    const { data } = await axios.post(\n      'http://localhost:5000/api/user/signin',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n    /* eslint-disable */\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\n// register a new user\nexport const register = (name, email, password) => async (\n  dispatch,\n  getState\n) => {\n  console.log('in the dispatch of the user actions', dispatch)\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    const { data } = await axios.post(\n      'http://localhost:5000/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const logout = () => async dispatch => {\n  console.log(`in the logout of the user Action file of the a`, dispatch)\n  localStorage.removeItem('userInfo')\n  dispatch({\n    type: USER_LOGOUT\n  })\n  dispatch({\n    type: USER_REGISTER_LOGOUT\n  })\n  // dispatch({\n  //   type: USER_PROFILE_RESET\n  // })\n  // dispatch({\n  //   type: MY_ORDER_DETAILS_RESET\n  // })\n  // dispatch({\n  //   type: USER_LIST_RESET\n  // })\n}\n"]},"metadata":{},"sourceType":"module"}