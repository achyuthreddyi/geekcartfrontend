{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/achyuth/Documents/geekcartfrontend/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport { listProductsDetails, updateProduct } from '../actions/productActions';\nimport { Form, Button } from 'react-bootstrap';\nimport ProgressBar from '../components/ProgressBar';\n\nconst ProductEditScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(''); // const [numReviews, setNumReviews] = useState('')\n\n  const [description, setDescription] = useState(''); // const [uploading, setUploading] = useState(false)\n\n  const [uploadError, setUploadError] = useState('');\n  const [file, setFile] = useState(null);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!product || !product.name || product._id !== productId) {\n        dispatch(listProductsDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      description,\n      price,\n      image,\n      brand,\n      category,\n      countInStock\n    }));\n  };\n\n  const uploadFileHandler = e => {\n    const selectedFile = e.target.files[0];\n    console.log(selectedFile);\n    const types = ['image/png', 'image/jpeg', 'image/jpg'];\n\n    if (selectedFile && types.includes(selectedFile.type)) {\n      setFile(selectedFile);\n      setUploadError('');\n    } else {\n      setFile(null);\n      setUploadError('Please select an image file (png or jpg)');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-light my-3\",\n      children: [/*#__PURE__*/_jsxDEV(AiOutlineArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), \" GoBack\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 27\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        error: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), \";\", /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Please Enter Your Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter Price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Image url \",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: \"Choose File\",\n            custom: true,\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [file.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 22\n          }, this), file && /*#__PURE__*/_jsxDEV(ProgressBar, {\n            file: file,\n            setFile: setFile,\n            setImage: setImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), uploadError && /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            error: uploadError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"countInStock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter countInStock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductEditScreen, \"bVn9r8yI/XQ9zBzNpjWn3Oo6ZzU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/home/achyuth/Documents/geekcartfrontend/src/screens/ProductEditScreen.js"],"names":["React","useState","useEffect","Message","Loader","FormContainer","AiOutlineArrowLeft","useDispatch","useSelector","Link","PRODUCT_UPDATE_RESET","listProductsDetails","updateProduct","Form","Button","ProgressBar","ProductEditScreen","match","history","productId","params","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploadError","setUploadError","file","setFile","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","_id","submitHandler","e","preventDefault","uploadFileHandler","selectedFile","target","files","console","log","types","includes","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport { listProductsDetails, updateProduct } from '../actions/productActions'\nimport { Form, Button } from 'react-bootstrap'\nimport ProgressBar from '../components/ProgressBar'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState('')\n  // const [numReviews, setNumReviews] = useState('')\n  const [description, setDescription] = useState('')\n  // const [uploading, setUploading] = useState(false)\n  const [uploadError, setUploadError] = useState('')\n\n  const [file, setFile] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector(state => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product || !product.name || product._id !== productId) {\n        dispatch(listProductsDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        description,\n        price,\n        image,\n        brand,\n        category,\n        countInStock\n      })\n    )\n  }\n\n  const uploadFileHandler = e => {\n    const selectedFile = e.target.files[0]\n    console.log(selectedFile)\n    const types = ['image/png', 'image/jpeg', 'image/jpg']\n\n    if (selectedFile && types.includes(selectedFile.type)) {\n      setFile(selectedFile)\n      setUploadError('')\n    } else {\n      setFile(null)\n      setUploadError('Please select an image file (png or jpg)')\n    }\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        <AiOutlineArrowLeft /> GoBack\n      </Link>\n      <h1>{name}</h1>\n      <FormContainer>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger' error={errorUpdate} />}\n\n        {loading && <Loader />}\n        {error && <Message variant='danger' error={error} />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label> Name</Form.Label>;\n            <Form.Control\n              type='name'\n              placeholder='Please Enter Your Name'\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='price'>\n            <Form.Label>Price</Form.Label>\n            <Form.Control\n              type='number'\n              placeholder='Enter Price'\n              value={price}\n              onChange={e => setPrice(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='image'>\n            <Form.Label>Image</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter Image url '\n              value={image}\n              onChange={e => setImage(e.target.value)}\n            />\n\n            <Form.File\n              id='image-file'\n              label='Choose File'\n              custom\n              onChange={uploadFileHandler}\n            />\n            {file && <div>{file.name} </div>}\n            {file && (\n              <ProgressBar file={file} setFile={setFile} setImage={setImage} />\n            )}\n            {uploadError && <Message variant='danger' error={uploadError} />}\n\n            {/* <Form.File id=\"exampleFormControlFile1\" label=\"Example file input\" /> */}\n\n            {/* {uploading && <Loader /> }          */}\n          </Form.Group>\n          <Form.Group controlId='brand'>\n            <Form.Label>Brand</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter brand'\n              value={brand}\n              onChange={e => setBrand(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='category'>\n            <Form.Label>Category</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter Category'\n              value={category}\n              onChange={e => setCategory(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='countInStock'>\n            <Form.Label>countInStock</Form.Label>\n            <Form.Control\n              type='number'\n              placeholder='Enter countInStock'\n              value={countInStock}\n              onChange={e => setCountInStock(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='description'>\n            <Form.Label>description</Form.Label>\n            <Form.Control\n              as='textarea'\n              placeholder='Enter description'\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n            />\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>\n            Update\n          </Button>\n        </Form>\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n"]},"metadata":{},"sourceType":"module"}