{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/achyuth/Documents/geekcart/frontend/src/screens/UserListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Table, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { listUsers } from '../actions/userActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\n\nconst UserListScreen = ({\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userList = useSelector(state => state.userList);\n  const {\n    loading,\n    error,\n    users\n  } = userList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo && userInfo.role > 0) {\n      dispatch(listUsers());\n    } else {\n      history.pushState('/login');\n    }\n  }, [dispatch, history, userInfo]);\n\n  const deleteHandler = id => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), users && users.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      boarded: true,\n      hover: true,\n      responsive: true,\n      className: \"table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [' ', /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `mailto:${user.email}`,\n              children: [user.email, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children:\n            /* eslint-disable */\n            user.role > 0 ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-check\",\n              style: {\n                color: 'green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)\n            /* eslint-enable */\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n              to: `/admin/user/${user._id}/edit`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"light\",\n                className: \"btn-sm\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              className: \"btn-sm\",\n              onClick: () => deleteHandler(user._id),\n              children: [' ', /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserListScreen, \"m8bxchS00E8VfeFQjMVhPEOklL8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserListScreen;\nexport default UserListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserListScreen\");","map":{"version":3,"sources":["/home/achyuth/Documents/geekcart/frontend/src/screens/UserListScreen.js"],"names":["React","useEffect","useDispatch","useSelector","Table","Button","LinkContainer","listUsers","Loader","Message","UserListScreen","history","dispatch","userList","state","loading","error","users","userLogin","userInfo","role","pushState","deleteHandler","id","length","map","user","_id","email","name","color"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Table, Button } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { listUsers } from '../actions/userActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector(state => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.role > 0) {\n      dispatch(listUsers())\n    } else {\n      history.pushState('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  const deleteHandler = id => {}\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading && <Loader />}\n      {error && <Message variant='danger' error={error} />}\n      {users && users.length > 0 && (\n        <Table striped boarded hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Email</th>\n              <th>Name</th>\n              <th>Admin</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map(user => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>\n                  {' '}\n                  <a href={`mailto:${user.email}`}>{user.email} </a>\n                </td>\n                <td>{user.name}</td>\n                <td>\n                  {/* eslint-disable */\n\n                  user.role > 0 ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )\n                  /* eslint-enable */\n                  }\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit' />\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    {' '}\n                    <i className='fas fa-trash' />\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n"]},"metadata":{},"sourceType":"module"}