{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from '../constants/userConstants';\nexport const login = (email, password) => async (dispatch, getState) => {\n  console.log('in the dispatch of the user actions', dispatch);\n\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5000/api/user/signin', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    /* eslint-disable */\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    /* eslint-enable */\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // register a new user\n\nexport const register = (name, email, password) => async (dispatch, getState) => {\n  console.log('in the dispatch of the user actions', name);\n\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5000/api/user/signup', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  console.log('in the logout of the user Action file of the a', dispatch);\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  }); // dispatch({\n  //   type: USER_REGISTER_LOGOUT\n  // })\n  // dispatch({\n  //   type: USER_PROFILE_RESET\n  // })\n  // dispatch({\n  //   type: MY_ORDER_DETAILS_RESET\n  // })\n  // dispatch({\n  //   type: USER_LIST_RESET\n  // })\n};\nexport const getuserProfile = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/achyuth/Documents/geekcart/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","login","email","password","dispatch","getState","console","log","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","register","name","logout","removeItem","getuserProfile","id","USER_PROFILE_REQUEST","userLogin","userInfo","Authorization","token","get","USER_PROFILE_SUCCESS","USER_PROFILE_FAIL"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS\n} from '../constants/userConstants'\n\nexport const login = (email, password) => async (dispatch, getState) => {\n  console.log('in the dispatch of the user actions', dispatch)\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    const { data } = await axios.post(\n      'http://localhost:5000/api/user/signin',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n    /* eslint-disable */\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n    /* eslint-enable */\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\n// register a new user\nexport const register = (name, email, password) => async (\n  dispatch,\n  getState\n) => {\n  console.log('in the dispatch of the user actions', name)\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    const { data } = await axios.post(\n      'http://localhost:5000/api/user/signup',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const logout = () => async dispatch => {\n  console.log('in the logout of the user Action file of the a', dispatch)\n  localStorage.removeItem('userInfo')\n  dispatch({\n    type: USER_LOGOUT\n  })\n  // dispatch({\n  //   type: USER_REGISTER_LOGOUT\n  // })\n  // dispatch({\n  //   type: USER_PROFILE_RESET\n  // })\n  // dispatch({\n  //   type: MY_ORDER_DETAILS_RESET\n  // })\n  // dispatch({\n  //   type: USER_LIST_RESET\n  // })\n}\n\nexport const getuserProfile = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_PROFILE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_PROFILE_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}