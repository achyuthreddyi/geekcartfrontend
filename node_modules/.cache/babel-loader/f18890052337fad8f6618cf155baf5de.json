{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_TOP_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS } from '../constants/productConstants';\nexport const listProducts = () => async disapatch => {\n  try {\n    disapatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('http://localhost:5000/api/product/');\n    disapatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    disapatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const listProductsDetails = id => async dispatch => {\n  console.log('inside tht listProduct details', id);\n\n  try {\n    console.log('dispatch ', dispatch);\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`http://localhost:5000/api/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.error ? error.response.data.error.data.error : error.message\n    });\n  }\n};\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`http://localhost:5000/api/product/${id}`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5000/api/product/admin/create', {}, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:5000/api/product/${product._id}`, product, config);\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`http://localhost:5000/api/product/${productId}/reviews`, review, config);\n    console.log('crateing the review', axios.post(`http://localhost:5000/api/product/${productId}/reviews`, review, config));\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listTopProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_TOP_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('http://localhost:5000/api/product/top');\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/achyuth/Documents/geekcart/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_TOP_FAIL","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","listProducts","disapatch","type","data","get","payload","error","response","listProductsDetails","id","dispatch","console","log","message","deleteProduct","getState","userLogin","userInfo","config","headers","Authorization","token","delete","createProduct","post","updateProduct","product","put","_id","createProductReview","productId","review","listTopProducts"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_TOP_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS\n} from '../constants/productConstants'\n\nexport const listProducts = () => async disapatch => {\n  try {\n    disapatch({ type: PRODUCT_LIST_REQUEST })\n    const { data } = await axios.get('http://localhost:5000/api/product/')\n    disapatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    disapatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response\n    })\n  }\n}\n\nexport const listProductsDetails = id => async dispatch => {\n  console.log('inside tht listProduct details', id)\n  try {\n    console.log('dispatch ', dispatch)\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n    const { data } = await axios.get(`http://localhost:5000/api/product/${id}`)\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.error\n          ? error.response.data.error.data.error\n          : error.message\n    })\n  }\n}\n\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_DELETE_REQUEST })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    await axios.delete(`http://localhost:5000/api/product/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_CREATE_REQUEST })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.post(\n      'http://localhost:5000/api/product/admin/create',\n      {},\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const updateProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_UPDATE_REQUEST })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.put(\n      `http://localhost:5000/api/product/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST })\n\n    const {\n      userLogin: { userInfo }\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    await axios.post(\n      `http://localhost:5000/api/product/${productId}/reviews`,\n      review,\n      config\n    )\n\n    console.log(\n      'crateing the review',\n      axios.post(\n        `http://localhost:5000/api/product/${productId}/reviews`,\n        review,\n        config\n      )\n    )\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const listTopProducts = () => async dispatch => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n    const { data } = await axios.get('http://localhost:5000/api/product/top')\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}