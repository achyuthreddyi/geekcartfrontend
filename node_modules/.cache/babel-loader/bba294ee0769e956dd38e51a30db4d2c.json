{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productCreateReducer, productDeleteReducer, productDetailReducer, productListReducer, productUpdateReducer } from './reducers/productReducer';\nimport { userListReducer, userLoginReducer, userProfileReducer, userRegisterReducer, userUpdateProfileReducer } from './reducers/userReducer';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderPayReducer, myOrderReducer, orderListReducer } from './reducers/orderReducers'; // const reducer = {}\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userProfile: userProfileReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  cart: cartReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderList: orderListReducer,\n  orderList: orderListReducer,\n  myOrdersList: myOrderReducer\n});\n/* eslint-disable */\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n/* eslint-enable */\n\nconsole.log('userInfoFromStorage', userInfoFromStorage);\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middlewares = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlewares)));\nexport default store;","map":{"version":3,"sources":["/home/achyuth/Documents/geekcart/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productCreateReducer","productDeleteReducer","productDetailReducer","productListReducer","productUpdateReducer","userListReducer","userLoginReducer","userProfileReducer","userRegisterReducer","userUpdateProfileReducer","cartReducer","orderCreateReducer","orderDeliverReducer","orderDetailsReducer","orderPayReducer","myOrderReducer","orderListReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","userLogin","userRegister","userProfile","userUpdateProfile","userList","cart","orderCreate","orderDetails","orderPay","orderDeliver","orderList","myOrdersList","userInfoFromStorage","localStorage","getItem","JSON","parse","console","log","initialState","userInfo","middlewares","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,kBAJF,EAKEC,oBALF,QAMO,2BANP;AAOA,SACEC,eADF,EAEEC,gBAFF,EAGEC,kBAHF,EAIEC,mBAJF,EAKEC,wBALF,QAMO,wBANP;AAOA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,eAJF,EAKEC,cALF,EAMEC,gBANF,QAOO,0BAPP,C,CASA;;AACA,MAAMC,OAAO,GAAGrB,eAAe,CAAC;AAC9BsB,EAAAA,WAAW,EAAEf,kBADiB;AAE9BgB,EAAAA,cAAc,EAAEjB,oBAFc;AAG9BkB,EAAAA,aAAa,EAAEnB,oBAHe;AAI9BoB,EAAAA,aAAa,EAAErB,oBAJe;AAK9BsB,EAAAA,aAAa,EAAElB,oBALe;AAO9BmB,EAAAA,SAAS,EAAEjB,gBAPmB;AAQ9BkB,EAAAA,YAAY,EAAEhB,mBARgB;AAS9BiB,EAAAA,WAAW,EAAElB,kBATiB;AAU9BmB,EAAAA,iBAAiB,EAAEjB,wBAVW;AAW9BkB,EAAAA,QAAQ,EAAEtB,eAXoB;AAa9BuB,EAAAA,IAAI,EAAElB,WAbwB;AAe9BmB,EAAAA,WAAW,EAAElB,kBAfiB;AAgB9BmB,EAAAA,YAAY,EAAEjB,mBAhBgB;AAiB9BkB,EAAAA,QAAQ,EAAEjB,eAjBoB;AAkB9BkB,EAAAA,YAAY,EAAEpB,mBAlBgB;AAmB9BqB,EAAAA,SAAS,EAAEjB,gBAnBmB;AAoB9BiB,EAAAA,SAAS,EAAEjB,gBApBmB;AAsB9BkB,EAAAA,YAAY,EAAEnB;AAtBgB,CAAD,CAA/B;AAwBA;;AACA,MAAMoB,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAGA;;AACAG,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCN,mBAAnC;AACA,MAAMO,YAAY,GAAG;AACnBnB,EAAAA,SAAS,EAAE;AACToB,IAAAA,QAAQ,EAAER;AADD;AADQ,CAArB;AAMA,MAAMS,WAAW,GAAG,CAAC9C,KAAD,CAApB;AAEA,MAAM+C,KAAK,GAAGlD,WAAW,CACvBsB,OADuB,EAEvByB,YAFuB,EAGvB3C,mBAAmB,CAACF,eAAe,CAAC,GAAG+C,WAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productCreateReducer,\n  productDeleteReducer,\n  productDetailReducer,\n  productListReducer,\n  productUpdateReducer\n} from './reducers/productReducer'\nimport {\n  userListReducer,\n  userLoginReducer,\n  userProfileReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer\n} from './reducers/userReducer'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  orderCreateReducer,\n  orderDeliverReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  myOrderReducer,\n  orderListReducer\n} from './reducers/orderReducers'\n\n// const reducer = {}\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userProfile: userProfileReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n\n  cart: cartReducer,\n\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderList: orderListReducer,\n  orderList: orderListReducer,\n\n  myOrdersList: myOrderReducer\n})\n/* eslint-disable */\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n/* eslint-enable */\nconsole.log('userInfoFromStorage', userInfoFromStorage)\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n}\n\nconst middlewares = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewares))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}