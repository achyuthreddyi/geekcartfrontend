[{"/home/achyuth/Documents/geekcart/frontend/src/index.js":"1","/home/achyuth/Documents/geekcart/frontend/src/App.js":"2","/home/achyuth/Documents/geekcart/frontend/src/store.js":"3","/home/achyuth/Documents/geekcart/frontend/src/reducers/productReducer.js":"4","/home/achyuth/Documents/geekcart/frontend/src/constants/productConstants.js":"5","/home/achyuth/Documents/geekcart/frontend/src/actions/productActions.js":"6","/home/achyuth/Documents/geekcart/frontend/src/components/Footer.js":"7","/home/achyuth/Documents/geekcart/frontend/src/components/Header.js":"8","/home/achyuth/Documents/geekcart/frontend/src/screens/Home.js":"9","/home/achyuth/Documents/geekcart/frontend/src/components/Product.js":"10","/home/achyuth/Documents/geekcart/frontend/src/components/Loader.js":"11","/home/achyuth/Documents/geekcart/frontend/src/screens/ProductScreen.js":"12","/home/achyuth/Documents/geekcart/frontend/src/components/Message.js":"13","/home/achyuth/Documents/geekcart/frontend/src/reducers/userReducer.js":"14","/home/achyuth/Documents/geekcart/frontend/src/constants/userConstants.js":"15","/home/achyuth/Documents/geekcart/frontend/src/screens/Login.js":"16","/home/achyuth/Documents/geekcart/frontend/src/components/FormContainer.js":"17","/home/achyuth/Documents/geekcart/frontend/src/actions/userActions.js":"18","/home/achyuth/Documents/geekcart/frontend/src/screens/Register.js":"19","/home/achyuth/Documents/geekcart/frontend/src/screens/ProfileScreen.js":"20","/home/achyuth/Documents/geekcart/frontend/src/screens/UserListScreen.js":"21","/home/achyuth/Documents/geekcart/frontend/src/screens/ProductListScreen.js":"22","/home/achyuth/Documents/geekcart/frontend/src/screens/ProductEditScreen.js":"23","/home/achyuth/Documents/geekcart/frontend/src/components/ProgressBar.js":"24","/home/achyuth/Documents/geekcart/frontend/src/config/useStorage.js":"25","/home/achyuth/Documents/geekcart/frontend/src/config/firebase.js":"26","/home/achyuth/Documents/geekcart/frontend/src/reducers/cartReducers.js":"27","/home/achyuth/Documents/geekcart/frontend/src/constants/cartConstants.js":"28","/home/achyuth/Documents/geekcart/frontend/src/screens/CartScreen.js":"29","/home/achyuth/Documents/geekcart/frontend/src/actions/cartActions.js":"30","/home/achyuth/Documents/geekcart/frontend/src/screens/ShippingScreen.js":"31","/home/achyuth/Documents/geekcart/frontend/src/components/CheckOutSteps.js":"32","/home/achyuth/Documents/geekcart/frontend/src/screens/PaymentScreen.js":"33","/home/achyuth/Documents/geekcart/frontend/src/reducers/orderReducers.js":"34","/home/achyuth/Documents/geekcart/frontend/src/constants/orderConstants.js":"35","/home/achyuth/Documents/geekcart/frontend/src/screens/PlaceOrderScreen.js":"36","/home/achyuth/Documents/geekcart/frontend/src/actions/orderActions.js":"37","/home/achyuth/Documents/geekcart/frontend/src/screens/OrderScreen.js":"38","/home/achyuth/Documents/geekcart/frontend/src/screens/OrderListScreen.js":"39","/home/achyuth/Documents/geekcart/frontend/src/screens/UserEditScreen.js":"40","/home/achyuth/Documents/geekcart/frontend/src/components/Rating.js":"41","/home/achyuth/Documents/geekcart/frontend/src/components/ProductCarousel.js":"42","/home/achyuth/Documents/geekcart/frontend/src/components/SearchBox.js":"43","/home/achyuth/Documents/geekcart/frontend/src/components/TitleHelmet.js":"44","/home/achyuth/Documents/geekcartfrontend/src/index.js":"45","/home/achyuth/Documents/geekcartfrontend/src/App.js":"46","/home/achyuth/Documents/geekcartfrontend/src/store.js":"47","/home/achyuth/Documents/geekcartfrontend/src/components/Header.js":"48","/home/achyuth/Documents/geekcartfrontend/src/components/Footer.js":"49","/home/achyuth/Documents/geekcartfrontend/src/screens/Home.js":"50","/home/achyuth/Documents/geekcartfrontend/src/screens/Login.js":"51","/home/achyuth/Documents/geekcartfrontend/src/screens/Register.js":"52","/home/achyuth/Documents/geekcartfrontend/src/screens/ProfileScreen.js":"53","/home/achyuth/Documents/geekcartfrontend/src/screens/UserListScreen.js":"54","/home/achyuth/Documents/geekcartfrontend/src/screens/ProductScreen.js":"55","/home/achyuth/Documents/geekcartfrontend/src/screens/ProductListScreen.js":"56","/home/achyuth/Documents/geekcartfrontend/src/screens/ShippingScreen.js":"57","/home/achyuth/Documents/geekcartfrontend/src/screens/ProductEditScreen.js":"58","/home/achyuth/Documents/geekcartfrontend/src/screens/PaymentScreen.js":"59","/home/achyuth/Documents/geekcartfrontend/src/screens/CartScreen.js":"60","/home/achyuth/Documents/geekcartfrontend/src/screens/OrderListScreen.js":"61","/home/achyuth/Documents/geekcartfrontend/src/screens/PlaceOrderScreen.js":"62","/home/achyuth/Documents/geekcartfrontend/src/screens/OrderScreen.js":"63","/home/achyuth/Documents/geekcartfrontend/src/screens/UserEditScreen.js":"64","/home/achyuth/Documents/geekcartfrontend/src/reducers/productReducer.js":"65","/home/achyuth/Documents/geekcartfrontend/src/reducers/cartReducers.js":"66","/home/achyuth/Documents/geekcartfrontend/src/reducers/userReducer.js":"67","/home/achyuth/Documents/geekcartfrontend/src/reducers/orderReducers.js":"68","/home/achyuth/Documents/geekcartfrontend/src/components/TitleHelmet.js":"69","/home/achyuth/Documents/geekcartfrontend/src/components/SearchBox.js":"70","/home/achyuth/Documents/geekcartfrontend/src/components/Product.js":"71","/home/achyuth/Documents/geekcartfrontend/src/components/Loader.js":"72","/home/achyuth/Documents/geekcartfrontend/src/components/Message.js":"73","/home/achyuth/Documents/geekcartfrontend/src/components/ProductCarousel.js":"74","/home/achyuth/Documents/geekcartfrontend/src/components/FormContainer.js":"75","/home/achyuth/Documents/geekcartfrontend/src/components/CheckOutSteps.js":"76","/home/achyuth/Documents/geekcartfrontend/src/actions/userActions.js":"77","/home/achyuth/Documents/geekcartfrontend/src/actions/productActions.js":"78","/home/achyuth/Documents/geekcartfrontend/src/actions/orderActions.js":"79","/home/achyuth/Documents/geekcartfrontend/src/actions/cartActions.js":"80","/home/achyuth/Documents/geekcartfrontend/src/constants/orderConstants.js":"81","/home/achyuth/Documents/geekcartfrontend/src/constants/cartConstants.js":"82","/home/achyuth/Documents/geekcartfrontend/src/constants/productConstants.js":"83","/home/achyuth/Documents/geekcartfrontend/src/constants/userConstants.js":"84","/home/achyuth/Documents/geekcartfrontend/src/components/ProgressBar.js":"85","/home/achyuth/Documents/geekcartfrontend/src/components/Rating.js":"86","/home/achyuth/Documents/geekcartfrontend/src/config/useStorage.js":"87","/home/achyuth/Documents/geekcartfrontend/src/config/firebase.js":"88"},{"size":358,"mtime":1607792892466,"results":"89","hashOfConfig":"90"},{"size":2320,"mtime":1608888956053,"results":"91","hashOfConfig":"90"},{"size":2417,"mtime":1608875427467,"results":"92","hashOfConfig":"90"},{"size":3494,"mtime":1608197611346,"results":"93","hashOfConfig":"90"},{"size":1496,"mtime":1608197567630,"results":"94","hashOfConfig":"90"},{"size":5185,"mtime":1608889373592,"results":"95","hashOfConfig":"90"},{"size":281,"mtime":1607792317994,"results":"96","hashOfConfig":"90"},{"size":2557,"mtime":1608889609582,"results":"97","hashOfConfig":"90"},{"size":1839,"mtime":1609051705260,"results":"98","hashOfConfig":"90"},{"size":832,"mtime":1608194924860,"results":"99","hashOfConfig":"90"},{"size":580,"mtime":1607933956872,"results":"100","hashOfConfig":"90"},{"size":7538,"mtime":1608888021259,"results":"101","hashOfConfig":"90"},{"size":297,"mtime":1607887967876,"results":"102","hashOfConfig":"90"},{"size":3571,"mtime":1608875277142,"results":"103","hashOfConfig":"90"},{"size":1535,"mtime":1608875221438,"results":"104","hashOfConfig":"90"},{"size":2250,"mtime":1609051939306,"results":"105","hashOfConfig":"90"},{"size":331,"mtime":1607868539146,"results":"106","hashOfConfig":"90"},{"size":6984,"mtime":1608887139556,"results":"107","hashOfConfig":"90"},{"size":2970,"mtime":1607881477560,"results":"108","hashOfConfig":"90"},{"size":5719,"mtime":1609051848882,"results":"109","hashOfConfig":"90"},{"size":3234,"mtime":1609088913897,"results":"110","hashOfConfig":"90"},{"size":3439,"mtime":1607936195106,"results":"111","hashOfConfig":"90"},{"size":6129,"mtime":1608888414173,"results":"112","hashOfConfig":"90"},{"size":437,"mtime":1607968157785,"results":"113","hashOfConfig":"90"},{"size":752,"mtime":1607952121738,"results":"114","hashOfConfig":"90"},{"size":634,"mtime":1607951971761,"results":"115","hashOfConfig":"90"},{"size":1175,"mtime":1608041270524,"results":"116","hashOfConfig":"90"},{"size":234,"mtime":1608040939822,"results":"117","hashOfConfig":"90"},{"size":4072,"mtime":1609052052571,"results":"118","hashOfConfig":"90"},{"size":1406,"mtime":1608051314496,"results":"119","hashOfConfig":"90"},{"size":2555,"mtime":1608051229349,"results":"120","hashOfConfig":"90"},{"size":1243,"mtime":1608051216533,"results":"121","hashOfConfig":"90"},{"size":1769,"mtime":1608052977028,"results":"122","hashOfConfig":"90"},{"size":3338,"mtime":1608790217123,"results":"123","hashOfConfig":"90"},{"size":1206,"mtime":1608145583798,"results":"124","hashOfConfig":"90"},{"size":5122,"mtime":1608140732280,"results":"125","hashOfConfig":"90"},{"size":4820,"mtime":1608146514345,"results":"126","hashOfConfig":"90"},{"size":9726,"mtime":1608835578586,"results":"127","hashOfConfig":"90"},{"size":2811,"mtime":1608147266841,"results":"128","hashOfConfig":"90"},{"size":3328,"mtime":1608887322147,"results":"129","hashOfConfig":"90"},{"size":1695,"mtime":1608194878460,"results":"130","hashOfConfig":"90"},{"size":1216,"mtime":1608199318328,"results":"131","hashOfConfig":"90"},{"size":731,"mtime":1608889005388,"results":"132","hashOfConfig":"90"},{"size":506,"mtime":1609051696068,"results":"133","hashOfConfig":"90"},{"size":358,"mtime":1609092406931,"results":"134","hashOfConfig":"135"},{"size":2320,"mtime":1609092406927,"results":"136","hashOfConfig":"135"},{"size":2417,"mtime":1609092406931,"results":"137","hashOfConfig":"135"},{"size":2490,"mtime":1609092406931,"results":"138","hashOfConfig":"135"},{"size":281,"mtime":1609092406931,"results":"139","hashOfConfig":"135"},{"size":1923,"mtime":1609100548174,"results":"140","hashOfConfig":"135"},{"size":2250,"mtime":1609092406931,"results":"141","hashOfConfig":"135"},{"size":2970,"mtime":1609092406931,"results":"142","hashOfConfig":"135"},{"size":5719,"mtime":1609092406931,"results":"143","hashOfConfig":"135"},{"size":3234,"mtime":1609092406931,"results":"144","hashOfConfig":"135"},{"size":7531,"mtime":1609092406931,"results":"145","hashOfConfig":"135"},{"size":3470,"mtime":1609092406931,"results":"146","hashOfConfig":"135"},{"size":2555,"mtime":1609092406931,"results":"147","hashOfConfig":"135"},{"size":6132,"mtime":1609092406931,"results":"148","hashOfConfig":"135"},{"size":1769,"mtime":1609092406931,"results":"149","hashOfConfig":"135"},{"size":4075,"mtime":1609092406931,"results":"150","hashOfConfig":"135"},{"size":2814,"mtime":1609092406931,"results":"151","hashOfConfig":"135"},{"size":5114,"mtime":1609092406931,"results":"152","hashOfConfig":"135"},{"size":9726,"mtime":1609135490771,"results":"153","hashOfConfig":"135"},{"size":3318,"mtime":1609092406931,"results":"154","hashOfConfig":"135"},{"size":3494,"mtime":1609092406931,"results":"155","hashOfConfig":"135"},{"size":1175,"mtime":1609092406931,"results":"156","hashOfConfig":"135"},{"size":3571,"mtime":1609092406931,"results":"157","hashOfConfig":"135"},{"size":3338,"mtime":1609092406931,"results":"158","hashOfConfig":"135"},{"size":506,"mtime":1609092406931,"results":"159","hashOfConfig":"135"},{"size":731,"mtime":1609092406931,"results":"160","hashOfConfig":"135"},{"size":832,"mtime":1609092406931,"results":"161","hashOfConfig":"135"},{"size":580,"mtime":1609092406931,"results":"162","hashOfConfig":"135"},{"size":297,"mtime":1609092406931,"results":"163","hashOfConfig":"135"},{"size":1258,"mtime":1609092503926,"results":"164","hashOfConfig":"135"},{"size":331,"mtime":1609092406931,"results":"165","hashOfConfig":"135"},{"size":1243,"mtime":1609092406931,"results":"166","hashOfConfig":"135"},{"size":6939,"mtime":1609135473519,"results":"167","hashOfConfig":"135"},{"size":5222,"mtime":1609134878115,"results":"168","hashOfConfig":"135"},{"size":4796,"mtime":1609135420691,"results":"169","hashOfConfig":"135"},{"size":1405,"mtime":1609135383456,"results":"170","hashOfConfig":"135"},{"size":1206,"mtime":1609092406931,"results":"171","hashOfConfig":"135"},{"size":234,"mtime":1609092406931,"results":"172","hashOfConfig":"135"},{"size":1496,"mtime":1609092406931,"results":"173","hashOfConfig":"135"},{"size":1535,"mtime":1609092406931,"results":"174","hashOfConfig":"135"},{"size":469,"mtime":1609092487605,"results":"175","hashOfConfig":"135"},{"size":1695,"mtime":1609092406931,"results":"176","hashOfConfig":"135"},{"size":752,"mtime":1609092406931,"results":"177","hashOfConfig":"135"},{"size":634,"mtime":1609092406931,"results":"178","hashOfConfig":"135"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},"rbi5us",{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"181"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"181"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"181"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"181"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"181"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"181"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"181"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"181"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"181"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"181"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"181"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},"1cyoy26",{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},"/home/achyuth/Documents/geekcart/frontend/src/index.js",[],["368","369"],"/home/achyuth/Documents/geekcart/frontend/src/App.js",[],"/home/achyuth/Documents/geekcart/frontend/src/store.js",[],"/home/achyuth/Documents/geekcart/frontend/src/reducers/productReducer.js",[],"/home/achyuth/Documents/geekcart/frontend/src/constants/productConstants.js",[],"/home/achyuth/Documents/geekcart/frontend/src/actions/productActions.js",[],"/home/achyuth/Documents/geekcart/frontend/src/components/Footer.js",[],"/home/achyuth/Documents/geekcart/frontend/src/components/Header.js",["370","371"],"import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { FaOpencart } from 'react-icons/fa'\nimport { AiFillLock, AiOutlineShoppingCart } from 'react-icons/ai'\nimport { HiShoppingCart } from 'react-icons/hi'\nimport { logout } from '../actions/userActions'\nimport SearchBox from './SearchBox'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <Navbar bg='dark' variant='dark' expand='lg'>\n      <Container>\n        <LinkContainer to='/'>\n          <Navbar.Brand className='logo'>geekcart</Navbar.Brand>\n        </LinkContainer>\n        {/* // dropdown  */}\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Route render={({ history }) => <SearchBox history={history} />} />\n          <Nav className='ml-auto'>\n            <LinkContainer to='/cart'>\n              <Nav.Link>\n                <HiShoppingCart size={30} />\n              </Nav.Link>\n            </LinkContainer>\n            {userInfo ? (\n              <NavDropdown title={userInfo.name} id='username'>\n                <LinkContainer to='/profile'>\n                  <NavDropdown.Item>Profile</NavDropdown.Item>\n                </LinkContainer>\n                <NavDropdown.Item onClick={logoutHandler}>\n                  Logout\n                </NavDropdown.Item>\n              </NavDropdown>\n            ) : (\n              <LinkContainer to='/login'>\n                <Nav.Link>\n                  <AiFillLock size={30} /> Sign In\n                </Nav.Link>\n              </LinkContainer>\n            )}\n\n            {userInfo && !(userInfo.role === 0) && (\n              <NavDropdown title='Admin' id='adminmenu'>\n                <LinkContainer to='/admin/userlist'>\n                  <NavDropdown.Item>Users</NavDropdown.Item>\n                </LinkContainer>\n                <LinkContainer to='/admin/productlist'>\n                  <NavDropdown.Item>Products</NavDropdown.Item>\n                </LinkContainer>\n                <LinkContainer to='/admin/orderlist'>\n                  <NavDropdown.Item>Orders</NavDropdown.Item>\n                </LinkContainer>\n              </NavDropdown>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default Header\n","/home/achyuth/Documents/geekcart/frontend/src/screens/Home.js",["372"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport { listProducts } from '../actions/productActions'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { Link } from 'react-router-dom'\n\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\nimport TitleHelmet from '../components/TitleHelmet'\n\nconst Home = ({ match }) => {\n  const keyword = match.params.keyword\n\n  const dispatch = useDispatch()\n  const productList = useSelector(state => state.productList)\n  const { loading, products, error } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword))\n  }, [dispatch])\n\n  console.log(productList)\n  return (\n    <div>\n      <TitleHelmet />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to='/' className='btn btn-light'>\n          {' '}\n          <AiOutlineArrowLeft />\n          Go Back\n        </Link>\n      )}\n\n      {/* {!loading && <ProductCarousel />} */}\n      {loading && <Loader />}\n      {/* {error && <Message variant='success' children={error}></Message>} */}\n      {/* eslint-disable */}\n      {!keyword && <h1>Latest Products @ cheapest prices</h1>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='success' data={error}></Message>\n      ) : (\n        <Row>\n          {/* {products.length === 0 && <h1>Error Loading products</h1>} */}\n          {products &&\n            products.map(product => (\n              <Col key={product._id} sm={12} md={6} lg={3} xlg={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n        </Row>\n      )}\n    </div>\n  )\n}\n\nexport default Home\n","/home/achyuth/Documents/geekcart/frontend/src/components/Product.js",[],"/home/achyuth/Documents/geekcart/frontend/src/components/Loader.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/ProductScreen.js",["373"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\n\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\nimport {\n  createProductReview,\n  listProductsDetails\n} from '../actions/productActions'\nimport Loader from '../components/Loader'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [quantity, setQuantity] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, product, error } = productDetails\n\n  const productReviewCreate = useSelector(state => state.productReviewCreate)\n  const {\n    error: errorProductReview,\n    success: successProductReview,\n    loading: loadingProductReview\n  } = productReviewCreate\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0)\n      setComment('')\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n    dispatch(listProductsDetails(match.params.id))\n  }, [dispatch, match, successProductReview])\n\n  const addToCart = () => {\n    history.push(`/cart/${match.params.id}?qty=${quantity}`)\n  }\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link className='btn btn-dark my-3' to='/'>\n        {' '}\n        <AiOutlineArrowLeft /> GoBack\n      </Link>\n      {loading && <Loader />}\n      {product && (\n        <>\n          <Row>\n            <Col md={6}>\n              <Image\n                className='product__image'\n                src={product.image}\n                alt={product.name}\n                fluid\n              />\n            </Col>\n\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h2>{product.name}</h2>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <h2>rating</h2>\n\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews `}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: &#x20B9; {product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong> &#x20B9; {product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'inStock' : 'Out of stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col> QTY </Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={quantity}\n                            onChange={e => setQuantity(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(x => (\n                              <option key={x + 1} value={x + 1}>\n                                {x + 1}\n                              </option>\n                            ))}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                      onClick={addToCart}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md={6}>\n              <h2>reviews</h2>\n              {product.reviews.length === 0 && (\n                <Message error='No reviews be the first one to review this product' />\n              )}\n              <ListGroup variant='flush'>\n                {product.reviews.map(review => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    {/* <p>{review.createdAt.substring(0, 10)}</p> */}\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>write your reviews</h2>\n                  {errorProductReview && (\n                    <Message variant='danger' error={errorProductReview} />\n                  )}\n                  {/* eslint-disable */\n\n                  userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>;\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={e => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={e => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n\n                      <Button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message variant='danger' error='please login' />\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","/home/achyuth/Documents/geekcart/frontend/src/components/Message.js",[],"/home/achyuth/Documents/geekcart/frontend/src/reducers/userReducer.js",[],"/home/achyuth/Documents/geekcart/frontend/src/constants/userConstants.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/Login.js",[],"/home/achyuth/Documents/geekcart/frontend/src/components/FormContainer.js",[],"/home/achyuth/Documents/geekcart/frontend/src/actions/userActions.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/Register.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/ProfileScreen.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/UserListScreen.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/ProductListScreen.js",["374","375","376","377","378"],"import React, { useEffect, useState } from 'react'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers } from '../actions/userActions'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport {\n  deleteProduct,\n  listProducts,\n  createProduct\n} from '../actions/productActions'\n\nconst ProductListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const productList = useSelector(state => state.productList)\n  const { loading, error, products } = productList\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productDelete = useSelector(state => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = productDelete\n\n  const productCreate = useSelector(state => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct\n  } = productCreate\n\n  useEffect(() => {\n    if (!userInfo || userInfo.role === 0) {\n      history.push('/login')\n    }\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts())\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate\n    // createdProduct\n  ])\n\n  const deleteHandler = id => {\n    if (window.confirm('are you sure')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus px-1' />\n            Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      {products && (\n        <Table striped boarded hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Price</th>\n              <th>Category</th>\n              <th>Brand</th>\n              <th>Edit</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map(product => (\n              <tr key={product._id}>\n                <td>{product._id}</td>\n                <td>{product.name}</td>\n                <td>{product.price}</td>\n                <td>{product.category}</td>\n                <td>{product.brand}</td>\n                <td>\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                    <Button>\n                      <i className='fas fa-edit mx-2' />\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm mx-2'\n                    onClick={() => deleteHandler(product._id)}\n                  >\n                    <i className='fas fa-trash' />\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","/home/achyuth/Documents/geekcart/frontend/src/screens/ProductEditScreen.js",["379","380"],"import React, { useState, useEffect } from 'react'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport { listProductsDetails, updateProduct } from '../actions/productActions'\nimport { Form, Button } from 'react-bootstrap'\nimport ProgressBar from '../components/ProgressBar'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState('')\n  // const [numReviews, setNumReviews] = useState('')\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n  const [uploadError, setUploadError] = useState('')\n\n  const [file, setFile] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector(state => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product || !product.name || product._id !== productId) {\n        dispatch(listProductsDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        description,\n        price,\n        image,\n        brand,\n        category,\n        countInStock\n      })\n    )\n  }\n\n  const uploadFileHandler = e => {\n    const selectedFile = e.target.files[0]\n    console.log(selectedFile)\n    const types = ['image/png', 'image/jpeg', 'image/jpg']\n\n    if (selectedFile && types.includes(selectedFile.type)) {\n      setFile(selectedFile)\n      setUploadError('')\n    } else {\n      setFile(null)\n      setUploadError('Please select an image file (png or jpg)')\n    }\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        <AiOutlineArrowLeft /> GoBack\n      </Link>\n      <h1>{name}</h1>\n      <FormContainer>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger' error={errorUpdate} />}\n\n        {loading && <Loader />}\n        {error && <Message variant='danger' error={error} />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label> Name</Form.Label>;\n            <Form.Control\n              type='name'\n              placeholder='Please Enter Your Name'\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='price'>\n            <Form.Label>Price</Form.Label>\n            <Form.Control\n              type='number'\n              placeholder='Enter Price'\n              value={price}\n              onChange={e => setPrice(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='image'>\n            <Form.Label>Image</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter Image url '\n              value={image}\n              onChange={e => setImage(e.target.value)}\n            />\n\n            <Form.File\n              id='image-file'\n              label='Choose File'\n              custom\n              onChange={uploadFileHandler}\n            />\n            {file && <div>{file.name} </div>}\n            {file && (\n              <ProgressBar file={file} setFile={setFile} setImage={setImage} />\n            )}\n            {uploadError && <Message variant='danger' error={uploadError} />}\n\n            {/* <Form.File id=\"exampleFormControlFile1\" label=\"Example file input\" /> */}\n\n            {/* {uploading && <Loader /> }          */}\n          </Form.Group>\n          <Form.Group controlId='brand'>\n            <Form.Label>Brand</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter brand'\n              value={brand}\n              onChange={e => setBrand(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='category'>\n            <Form.Label>Category</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter Category'\n              value={category}\n              onChange={e => setCategory(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='countInStock'>\n            <Form.Label>countInStock</Form.Label>\n            <Form.Control\n              type='number'\n              placeholder='Enter countInStock'\n              value={countInStock}\n              onChange={e => setCountInStock(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='description'>\n            <Form.Label>description</Form.Label>\n            <Form.Control\n              as='textarea'\n              placeholder='Enter description'\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n            />\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>\n            Update\n          </Button>\n        </Form>\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","/home/achyuth/Documents/geekcart/frontend/src/components/ProgressBar.js",["381"],"import React, { useEffect } from 'react'\nimport useStorage from '../config/useStorage'\n\nconst ProgressBar = ({ file, setFile, setImage }) => {\n  const { url, progress } = useStorage(file)\n  console.log('progress', progress, url)\n  useEffect(() => {\n    if (url) {\n      setFile(null)\n      setImage(url)\n    }\n  }, [url, setFile])\n  return <div className='progress-bar' style={{ width: progress + '%' }} />\n}\n\nexport default ProgressBar\n","/home/achyuth/Documents/geekcart/frontend/src/config/useStorage.js",[],"/home/achyuth/Documents/geekcart/frontend/src/config/firebase.js",[],"/home/achyuth/Documents/geekcart/frontend/src/reducers/cartReducers.js",[],"/home/achyuth/Documents/geekcart/frontend/src/constants/cartConstants.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/CartScreen.js",["382"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message.js'\nimport { AiOutlineArrowLeft, AiOutlineDelete } from 'react-icons/ai'\n\nimport { addToCart, removeCart } from '../actions/cartActions'\nimport TitleHelmet from '../components/TitleHelmet.js'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const quantity = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n  const cart = useSelector(state => state.cart)\n  const { cartItems } = cart\n\n  const removeFromCartHandler = id => {\n    dispatch(removeCart(id))\n  }\n\n  const CheckOutHandler = () => {\n    history.push('/login?redirect=shipping')\n    localStorage.removeItem('cartItems')\n  }\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, quantity))\n    }\n  }, [dispatch, productId, quantity])\n\n  return (\n    <Row>\n      <TitleHelmet title='Your cart ' />\n\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Link className='btn btn-dark my-3' to='/'>\n            <AiOutlineArrowLeft /> GoBack\n          </Link>\n        ) : (\n          // <Message>\n          //   Your cart is empty!!Try out our amazing product lines\n          //   <Link className='btn btn-dark my-3' to='/'>\n          //     {' '}\n          //     <AiOutlineArrowLeft /> GoBack\n          //   </Link>\n          // </Message>\n          <ListGroup variant='flush'>\n            <h1>products are there</h1>\n            {cartItems.map(item => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}> Price: &#x20B9; {item.price}</Col>\n\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.quantity}\n                      onChange={e =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map(x => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <AiOutlineDelete />\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                SubTotal(\n                {cartItems.reduce((acc, item) => acc + item.quantity, 0)}) items\n              </h2>\n              &#x20B9;{' '}\n              {cartItems\n                .reduce((acc, item) => acc + item.quantity * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={CheckOutHandler}\n              >\n                Proceed to Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","/home/achyuth/Documents/geekcart/frontend/src/actions/cartActions.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/ShippingScreen.js",[],"/home/achyuth/Documents/geekcart/frontend/src/components/CheckOutSteps.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/PaymentScreen.js",[],"/home/achyuth/Documents/geekcart/frontend/src/reducers/orderReducers.js",[],"/home/achyuth/Documents/geekcart/frontend/src/constants/orderConstants.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/PlaceOrderScreen.js",["383","384"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  Button,\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Card,\n  ListGroupItem\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CheckOutSteps from '../components/CheckOutSteps'\nimport Message from '../components/Message'\nimport { createOrder } from '../actions/orderActions'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n  const cart = useSelector(state => state.cart)\n\n  const addDecimals = num => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n  // calculate prices\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price + item.quantity, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 499 ? 0 : 40)\n  // standarf gst on electronics is 18%\n  cart.taxPrice = addDecimals(Number((0.18 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = addDecimals(\n    Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\n  )\n\n  const orderCreate = useSelector(state => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice\n      })\n    )\n  }\n  return (\n    <>\n      <CheckOutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address</strong>\n                {cart.shippingAddress.address},{cart.shippingAddress.city},\n                {cart.shippingAddress.postalCode},{cart.shippingAddress.country}\n                ,\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod},\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your Cart is Empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={3}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.quantity} X &#x20B9;{item.price} = &#x20B9;\n                          {item.quantity * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col> &#x20B9;{cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col> &#x20B9;{cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>GST</Col>\n                  <Col> &#x20B9;{cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col> &#x20B9;{cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <ListGroup.Item>\n                  {error && <Message variant='danger' error={error} />}\n                </ListGroup.Item>\n\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","/home/achyuth/Documents/geekcart/frontend/src/actions/orderActions.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/OrderScreen.js",["385","386","387"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport {\n  Button,\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Card,\n  ListGroupItem\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder\n} from '../actions/orderActions'\nimport CheckoutSteps from '../components/CheckOutSteps'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport {\n  ORDER_DELIVER_RESET,\n  ORDER_PAY_RESET\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector(state => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const orderPay = useSelector(state => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector(state => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  if (!loading) {\n    const addDecimals = num => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n    // calculate prices\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce(\n        (acc, item) => acc + item.price + item.quantity,\n        0\n      )\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get(\n        'http://localhost:5000/api/config/paypal'\n      )\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver, userInfo])\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n  const successPaymentHandler = paymentResult => {\n    console.log('paymentResult', paymentResult)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <Message variant='danger' error={error} />}\n      <h1>Order screen</h1>\n      {order && order.orderItems.length === 0 && (\n        <Message\n          variant='danger'\n          error='you dont have any orders to be delivered from our end'\n        />\n      )}\n      {order && (\n        <>\n          <h1>Order {order._id}</h1>\n          <CheckoutSteps step1 step2 step3 step4 />\n          <Row>\n            <Col md={8}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h2>Shipping</h2>\n                  <p>\n                    <strong>Name: </strong> {order.user.name}\n                  </p>\n                  <p>\n                    <strong>Email: </strong>{' '}\n                    <a href={`mailto:${order.user.email}`}>\n                      {order.user.email}\n                    </a>\n                  </p>\n                  <p>\n                    <Link to='/profile'>profile: {order.user.name}</Link>\n                  </p>\n                  <p>\n                    <strong>Address: </strong>\n                    {order.shippingAddress.address}\n                    {', '}\n                    {order.shippingAddress.city}\n                    {', '}\n                    {order.shippingAddress.postalCode}\n                    {', '}\n                    {order.shippingAddress.country}\n                  </p>\n                  {order.isDelivered ? (\n                    <Message\n                      variant='success'\n                      error={`Delivered on ${order.deliveredAt}`}\n                    />\n                  ) : (\n                    <Message variant='secondary' error='Not Delivered' />\n                  )}\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <h2>Payment Method</h2>\n                  <p>\n                    <strong>Method: </strong>\n                    {order.paymentMethod}\n                  </p>\n                  {order.isPaid ? (\n                    <Message\n                      variant='success'\n                      error={`Paid on ${order.paidAt}`}\n                    />\n                  ) : (\n                    <Message variant='danger' error='Not Paid' />\n                  )}\n                </ListGroup.Item>\n\n                {userInfo &&\n                  !(userInfo.role === 0) &&\n                  order.isPaid &&\n                  !order.isDelivered && (\n                    <ListGroup.Item>\n                      <Button\n                        className='btn btn-block'\n                        type='button'\n                        onClick={deliverHandler}\n                      >\n                        Delver Item\n                      </Button>\n                    </ListGroup.Item>\n                  )}\n\n                <ListGroup.Item>\n                  <h2>Order Items</h2>\n                  {order.orderItems.length === 0 ? (\n                    <>\n                      <Message>Order is empty</Message>\n                      Try our products ?<Link to='/'>main Page</Link>\n                    </>\n                  ) : (\n                    <ListGroup variant='flush'>\n                      {order.orderItems.map((item, index) => (\n                        <ListGroup.Item key={index}>\n                          <Row>\n                            <Col md={1}>\n                              <Image\n                                src={item.image}\n                                alt={item.name}\n                                fluid\n                                rounded\n                              />\n                            </Col>\n                            <Col>\n                              <Link to={`/product/${item.product}`}>\n                                {item.name}\n                              </Link>\n                            </Col>\n                            <Col md={4}>\n                              {item.quantity} x &#x20B9; {item.price} = $\n                              {item.quantity * item.price}\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      ))}\n                    </ListGroup>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={4}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <h2>Order Summary</h2>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Items</Col>\n                      <Col>&#x20B9; {order.itemsPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Shipping</Col>\n                      <Col>&#x20B9; {order.shippingPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Tax</Col>\n                      <Col>&#x20B9; {order.taxPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Total</Col>\n                      <Col>&#x20B9; {order.totalPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {!order.isPaid && (\n                    <>\n                      <ListGroup.Item>\n                        {loadingPay && <Loader />}\n                        {!sdkReady ? (\n                          <Loader />\n                        ) : (\n                          <PayPalButton\n                            amount={order.totalPrice}\n                            onSuccess={successPaymentHandler}\n                          />\n                        )}\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <Button\n                        // onClick = {instaMojoPay}\n                        >\n                          Pay via instamojo\n                        </Button>\n                      </ListGroup.Item>\n                    </>\n                  )}\n\n                  {loadingDeliver && <Loader />}\n                  {userInfo &&\n                    userInfo.role === 1 &&\n                    order.isPaid &&\n                    !order.isDelivered && (\n                      <ListGroup.Item>\n                        <Button\n                          type='button'\n                          className='btn btn-block'\n                          onClick={deliverHandler}\n                        >\n                          Mark As Delivered\n                        </Button>\n                      </ListGroup.Item>\n                    )}\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default OrderScreen\n","/home/achyuth/Documents/geekcart/frontend/src/screens/OrderListScreen.js",["388","389","390"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { listAllOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history, match }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector(state => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(\n    _ => {\n      if (userInfo && userInfo.role > 0) {\n        dispatch(listAllOrders())\n      } else {\n        history.push('/login')\n      }\n    },\n    [dispatch, history, userLogin]\n  )\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Orders</h1>\n        </Col>\n      </Row>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger' error={error} />\n      ) : (\n        <Table striped boarded hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>Order ID</th>\n              <th>User</th>\n              <th>DATE</th>\n              <th>TOTAL </th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders &&\n              orders.map(order => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.user && order.user.name}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      //FIXME: show the paid at details\n                      <i className='fas fa-check' style={{ color: 'green' }} />\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }} />\n                    )}\n                  </td>\n\n                  <td>\n                    {order.isDelivered ? (\n                      //FIXME: show the delivered at details\n                      <i className='fas fa-check' style={{ color: 'green' }} />\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }} />\n                    )}\n                  </td>\n\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button>Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen\n","/home/achyuth/Documents/geekcart/frontend/src/screens/UserEditScreen.js",["391","392"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getuserProfile, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [role, setRole] = useState(0)\n\n  const dispatch = useDispatch()\n\n  const userProfile = useSelector(state => state.userProfile)\n  const { loading, error, user } = userProfile\n\n  const userUpdate = useSelector(state => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    }\n    if (!user.name || user._id !== userId) {\n      dispatch(getuserProfile(userId))\n    } else {\n      setName(user.name)\n      setEmail(user.email)\n      setRole(user.role)\n    }\n  }, [dispatch, user, userId, history, successUpdate])\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name: name, email: email, role: role }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        <AiOutlineArrowLeft /> GoBack\n      </Link>\n\n      <FormContainer>\n        <h1>Edit user</h1>\n\n        {loading && <Loader />}\n        {errorUpdate && <Message variant='danger' error={errorUpdate} />}\n        {loadingUpdate ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger' error={error} />\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Please Enter Your Name'\n                value={name}\n                onChange={e => setName(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter Email'\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId='role'>\n              <Form.Label>Change user Type</Form.Label>\n              <Form.Control\n                as='select'\n                value={role}\n                onChange={e => setRole(e.target.value)}\n              >\n                <option value={0}>Normal User</option>\n                <option value={1}>Admin</option>\n                <option value={2}>Seller</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","/home/achyuth/Documents/geekcart/frontend/src/components/Rating.js",[],"/home/achyuth/Documents/geekcart/frontend/src/components/ProductCarousel.js",[],"/home/achyuth/Documents/geekcart/frontend/src/components/SearchBox.js",[],"/home/achyuth/Documents/geekcart/frontend/src/components/TitleHelmet.js",[],"/home/achyuth/Documents/geekcartfrontend/src/index.js",[],["393","394"],"/home/achyuth/Documents/geekcartfrontend/src/App.js",[],"/home/achyuth/Documents/geekcartfrontend/src/store.js",[],"/home/achyuth/Documents/geekcartfrontend/src/components/Header.js",[],"/home/achyuth/Documents/geekcartfrontend/src/components/Footer.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/Home.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/Login.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/Register.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/ProfileScreen.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/UserListScreen.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/ProductScreen.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/ProductListScreen.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/ShippingScreen.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/ProductEditScreen.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/PaymentScreen.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/CartScreen.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/OrderListScreen.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/PlaceOrderScreen.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/OrderScreen.js",[],"/home/achyuth/Documents/geekcartfrontend/src/screens/UserEditScreen.js",[],"/home/achyuth/Documents/geekcartfrontend/src/reducers/productReducer.js",[],"/home/achyuth/Documents/geekcartfrontend/src/reducers/cartReducers.js",[],"/home/achyuth/Documents/geekcartfrontend/src/reducers/userReducer.js",[],"/home/achyuth/Documents/geekcartfrontend/src/reducers/orderReducers.js",[],"/home/achyuth/Documents/geekcartfrontend/src/components/TitleHelmet.js",[],"/home/achyuth/Documents/geekcartfrontend/src/components/SearchBox.js",[],"/home/achyuth/Documents/geekcartfrontend/src/components/Product.js",[],"/home/achyuth/Documents/geekcartfrontend/src/components/Loader.js",[],"/home/achyuth/Documents/geekcartfrontend/src/components/Message.js",[],"/home/achyuth/Documents/geekcartfrontend/src/components/ProductCarousel.js",[],"/home/achyuth/Documents/geekcartfrontend/src/components/FormContainer.js",[],"/home/achyuth/Documents/geekcartfrontend/src/components/CheckOutSteps.js",[],"/home/achyuth/Documents/geekcartfrontend/src/actions/userActions.js",[],"/home/achyuth/Documents/geekcartfrontend/src/actions/productActions.js",[],"/home/achyuth/Documents/geekcartfrontend/src/actions/orderActions.js",[],"/home/achyuth/Documents/geekcartfrontend/src/actions/cartActions.js",[],"/home/achyuth/Documents/geekcartfrontend/src/constants/orderConstants.js",[],"/home/achyuth/Documents/geekcartfrontend/src/constants/cartConstants.js",[],"/home/achyuth/Documents/geekcartfrontend/src/constants/productConstants.js",[],"/home/achyuth/Documents/geekcartfrontend/src/constants/userConstants.js",[],"/home/achyuth/Documents/geekcartfrontend/src/components/ProgressBar.js",[],"/home/achyuth/Documents/geekcartfrontend/src/components/Rating.js",[],"/home/achyuth/Documents/geekcartfrontend/src/config/useStorage.js",[],"/home/achyuth/Documents/geekcartfrontend/src/config/firebase.js",[],{"ruleId":"395","replacedBy":"396"},{"ruleId":"397","replacedBy":"398"},{"ruleId":"399","severity":1,"message":"400","line":6,"column":10,"nodeType":"401","messageId":"402","endLine":6,"endColumn":20},{"ruleId":"399","severity":1,"message":"403","line":7,"column":22,"nodeType":"401","messageId":"402","endLine":7,"endColumn":43},{"ruleId":"404","severity":1,"message":"405","line":23,"column":6,"nodeType":"406","endLine":23,"endColumn":16,"suggestions":"407"},{"ruleId":"399","severity":1,"message":"408","line":24,"column":29,"nodeType":"401","messageId":"402","endLine":24,"endColumn":34},{"ruleId":"399","severity":1,"message":"409","line":1,"column":28,"nodeType":"401","messageId":"402","endLine":1,"endColumn":36},{"ruleId":"399","severity":1,"message":"410","line":6,"column":10,"nodeType":"401","messageId":"402","endLine":6,"endColumn":19},{"ruleId":"399","severity":1,"message":"411","line":33,"column":14,"nodeType":"401","messageId":"402","endLine":33,"endColumn":27},{"ruleId":"399","severity":1,"message":"412","line":34,"column":12,"nodeType":"401","messageId":"402","endLine":34,"endColumn":23},{"ruleId":"404","severity":1,"message":"413","line":48,"column":6,"nodeType":"406","endLine":55,"endColumn":4,"suggestions":"414"},{"ruleId":"399","severity":1,"message":"415","line":24,"column":10,"nodeType":"401","messageId":"402","endLine":24,"endColumn":19},{"ruleId":"399","severity":1,"message":"416","line":24,"column":21,"nodeType":"401","messageId":"402","endLine":24,"endColumn":33},{"ruleId":"404","severity":1,"message":"417","line":12,"column":6,"nodeType":"406","endLine":12,"endColumn":20,"suggestions":"418"},{"ruleId":"399","severity":1,"message":"419","line":5,"column":8,"nodeType":"401","messageId":"402","endLine":5,"endColumn":15},{"ruleId":"399","severity":1,"message":"409","line":1,"column":17,"nodeType":"401","messageId":"402","endLine":1,"endColumn":25},{"ruleId":"399","severity":1,"message":"420","line":10,"column":3,"nodeType":"401","messageId":"402","endLine":10,"endColumn":16},{"ruleId":"399","severity":1,"message":"421","line":3,"column":16,"nodeType":"401","messageId":"402","endLine":3,"endColumn":24},{"ruleId":"399","severity":1,"message":"420","line":11,"column":3,"nodeType":"401","messageId":"402","endLine":11,"endColumn":16},{"ruleId":"404","severity":1,"message":"422","line":89,"column":6,"nodeType":"406","endLine":89,"endColumn":70,"suggestions":"423"},{"ruleId":"399","severity":1,"message":"409","line":1,"column":17,"nodeType":"401","messageId":"402","endLine":1,"endColumn":25},{"ruleId":"399","severity":1,"message":"424","line":2,"column":10,"nodeType":"401","messageId":"402","endLine":2,"endColumn":14},{"ruleId":"404","severity":1,"message":"425","line":27,"column":5,"nodeType":"406","endLine":27,"endColumn":35,"suggestions":"426"},{"ruleId":"399","severity":1,"message":"427","line":3,"column":24,"nodeType":"401","messageId":"402","endLine":3,"endColumn":27},{"ruleId":"399","severity":1,"message":"428","line":3,"column":29,"nodeType":"401","messageId":"402","endLine":3,"endColumn":32},{"ruleId":"395","replacedBy":"429"},{"ruleId":"397","replacedBy":"430"},"no-native-reassign",["431"],"no-negated-in-lhs",["432"],"no-unused-vars","'FaOpencart' is defined but never used.","Identifier","unusedVar","'AiOutlineShoppingCart' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'keyword'. Either include it or remove the dependency array.","ArrayExpression",["433"],"'error' is assigned a value but never used.","'useState' is defined but never used.","'listUsers' is defined but never used.","'loadingCreate' is assigned a value but never used.","'errorCreate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'createdProduct._id'. Either include it or remove the dependency array.",["434"],"'uploading' is assigned a value but never used.","'setUploading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setImage'. Either include it or remove the dependency array. If 'setImage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["435"],"'Message' is defined but never used.","'ListGroupItem' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["436"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["437"],"'Row' is defined but never used.","'Col' is defined but never used.",["431"],["432"],"no-global-assign","no-unsafe-negation",{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},"Update the dependencies array to be: [dispatch, keyword]",{"range":"448","text":"449"},"Update the dependencies array to be: [dispatch, history, userInfo, successDelete, successCreate, createdProduct._id]",{"range":"450","text":"451"},"Update the dependencies array to be: [url, setFile, setImage]",{"range":"452","text":"453"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"454","text":"455"},"Update the dependencies array to be: [dispatch, history, userInfo, userLogin]",{"range":"456","text":"457"},[810,820],"[dispatch, keyword]",[1360,1465],"[dispatch, history, userInfo, successDelete, successCreate, createdProduct._id]",[315,329],"[url, setFile, setImage]",[2458,2522],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[850,880],"[dispatch, history, userInfo, userLogin]"]